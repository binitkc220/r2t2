#include "material/texture.h"
#include "renderer/rt.h"
#include "material/color.h"
#include "geometry/hittable_list.h"
#include "geometry/sphere.h"
#include "renderer/camera.h"
#include "renderer/rt.h"
#include "material/material.h"
#include "geometry/bvh.h"
#include "geometry/rectangle.h"
#include "geometry/triangle.h"
#include "geometry/quad.h"
#include "geometry/parse_obj.h"
#include <cstdlib>
#include "renderer/vec2.h"
#include <iostream>
#include <memory>
#include <sstream>
using namespace std;
int main()
{
    std::string objFileLocation = "asset/obj/pyramid.obj";
    std::vector<vec3> vertices;
    std::vector<vec2> uv_points;
    std::vector<std::vector<int>> triangle_face;
    std::vector<std::vector<int>> quad_face;
    readObjFile(objFileLocation, vertices, triangle_face, quad_face, uv_points);
    cout << "The quad vertices are : " <<endl;
    for (const auto& face : quad_face) {
        cout << vertices[face.at(0)-1] << " " << vertices[face.at(1)-1] << " " << vertices[face.at(2)-1] << " " << vertices[face.at(3)-1] << endl;
    }
    cout << "The triangle vetices are : " << endl;
    for (const auto& face : triangle_face) {
        cout << vertices[face.at(0)-1] << " " << vertices[face.at(1)-1] << " " << vertices[face.at(2)-1] << endl;
    }
    cout << "uv points are : " << endl;
    for (const auto& face : triangle_face) {
        // for (const auto& v : face) {
            cout << uv_points[face.at(0)-1] << " " << uv_points[face.at(1)-1]<<" " << uv_points[face.at(2)-1]<<endl;
        // }
    }
}